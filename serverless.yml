service: sls-devagram-typescript
frameworkVersion: '3'

custom:
  userPoolId: 'us-east-1_VrI3XRYMb'
  userPoolClientId: '1g2cpmn0a31at0srh7nk4phsi4'

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    USER_POOL_ID: ${self:custom.userPoolId}
    USER_POOL_CLIENT_ID: ${self:custom.userPoolClientId}

plugins:
  - serverless-plugin-typescript

functions:
  register:
    handler: src/functions/auth.register
    events:
      - http:
          path: register
          method: post
          cors: true
  confirmEmail:
    handler: src/functions/auth.confirmEmail
    events:
      - http:
          path: confirmEmail
          method: post
          cors: true

resources:
  Resources:
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:service}-${self:provider.stage}-user-pool
        AdminCreateUserConfig: 
          AllowAdminCreateUserOnly: false
        UsernameAttributes: 
          - email
        AutoVerifiedAttributes: 
          - email
        EmailVerificationMessage: "Seu código de verificação para o cadastro Devragram é: {####}"
        EmailVerificationSubject: "Código de verificação Devagram"
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: true
            RequireUppercase: true
    CognitoUserClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:service}-${self:provider.stage}-user-pool-client
        UserPoolId: !Ref CognitoUserPool
        AllowedOAuthFlows: 
          - implicit
        AllowedOAuthFlowsUserPoolClient: true
        AllowedOAuthScopes:
          - email
          - openid
        CallbackURLs:
          - https://www.devaria.com.br
        LogoutURLs:
          - https://www.devaria.com.br
        ExplicitAuthFlows:
          - ALLOW_CUSTOM_AUTH
          - ALLOW_USER_SRP_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        SupportedIdentityProviders:
          - COGNITO
        ReadAttributes:
          - email
        WriteAttributes:
          - email
    CognitoUserPoolDomain:
      Type: AWS::Cognito::UserPoolDomain
      Properties:
        UserPoolId: !Ref CognitoUserPool
        Domain: ${self:service}-${self:provider.stage}-user-pool-domain-serveless-devaria